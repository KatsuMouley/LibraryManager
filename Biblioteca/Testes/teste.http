@host = http://localhost:5257

# ==========================================================
# ||                 VARIÁVEIS DE TOKEN                   ||
# || IMPORTANTE: Após fazer login com cada tipo de        ||
# || usuário no seu banco de dados, cole o token JWT      ||
# || correspondente aqui.                                 ||
# ==========================================================
@token_comum = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiY29tbW9tdXNlckBleGFtcGxlLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiMSIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvcm9sZSI6InVzdWFyaW8iLCJleHAiOjE3NTA5NDg4MjN9.TKiH-bNXrlBaSv3brKThJLx0dP89X1YRROKzoEEsl2c
@token_admin = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoibm92by5hZG1pbkBleGFtcGxlLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiMiIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvcm9sZSI6ImFkbWluaXN0cmFkb3IiLCJleHAiOjE3NTA5NDg4NDV9.hjPNdQn5WOknSVnxEZdEVQHfEebPZUG2vUWtvo4zqfE


###########################################################
### 🔓 ROTAS PÚBLICAS (não requerem autenticação)
###########################################################

### ✅ Cadastrar usuário COMUM (Permissao: 0)
POST {{host}}/api/Usuario/cadastrar
Content-Type: application/json

{
  "email": "commomuser@example.com",
  "senha": "123456",
  "permissao": 0
}

### ✅ Cadastrar usuário ADMIN (Permissao: 1)
POST {{host}}/api/Usuario/cadastrar
Content-Type: application/json

{
  "email": "novo.admin@example.com",
  "senha": "123456",
  "permissao": 1
}

### ✅ Login (Usuário COMUM)
POST {{host}}/api/Usuario/login
Content-Type: application/json

{
  "email": "commomuser@example.com",
  "senha": "123456"
}

### ✅ Login (Usuário ADMIN)
POST {{host}}/api/Usuario/login
Content-Type: application/json

{
  "email": "novo.admin@example.com",
  "senha": "123456"
}

### ✅ Listar todos os livros
GET {{host}}/api/Livros/listar

### ✅ Buscar livro por ID
# ATENÇÃO: Use um ID de livro existente (ex: 1)
GET {{host}}/api/Livros/1

### ✅ Buscar livros por autor
# ATENÇÃO: Use um ID de autor existente (ex: 1)
GET {{host}}/api/Livros/autor/1

### ✅ Listar todos os autores
GET {{host}}/api/Autor/listar

### ✅ Buscar autor por ID
# ATENÇÃO: Use um ID de autor existente (ex: 1)
GET {{host}}/api/Autor/1


###########################################################
### 🔐 ROTAS PROTEGIDAS (requerem autenticação)
###########################################################

### 🔒 Listar todos os usuários (somente ADMIN)
GET {{host}}/api/Usuario/listar
Authorization: Bearer {{token_admin}}

###

### 🔒 Cadastrar novo autor (somente ADMIN)
POST {{host}}/api/Autor
Authorization: Bearer {{token_admin}}
Content-Type: application/json

{
  "nome": "George Orwell",
  "nacionalidade": "Britânico"
}

### 🔒 Atualizar autor (somente ADMIN)
# ATENÇÃO: Use um ID de autor existente no seu DB
PUT {{host}}/api/Autor/alterar/1
Authorization: Bearer {{token_admin}}
Content-Type: application/json

{
  "id": 1,
  "nome": "Eric Arthur Blair",
  "nacionalidade": "Britânico"
}

### 🔒 Deletar autor (somente ADMIN)
# ATENÇÃO: Use um ID de autor existente E SEM LIVROS ASSOCIADOS no seu DB
DELETE {{host}}/api/Autor/deletar/2
Authorization: Bearer {{token_admin}}

###

### 🔒 Cadastrar novo livro (somente ADMIN)
# ATENÇÃO: autorId deve ser um ID de autor existente no seu DB
POST {{host}}/api/Livros
Authorization: Bearer {{token_admin}}
Content-Type: application/json

{
  "titulo": "A Revolução dos Bichos",
  "anoPublicacao": 1945,
  "autorId": 1,
  "capaUrl": "https://m.media-amazon.com/images/I/41D0bB5sUWL._SY445_SX342_QL70_FMwebp_.jpg"
}

### 🔒 Atualizar livro (somente ADMIN)
# ATENÇÃO: Use um ID de livro e um ID de autor existentes no seu DB
PUT {{host}}/api/Livros/1
Authorization: Bearer {{token_admin}}
Content-Type: application/json

{
  "id": 1,
  "titulo": "1984 (Edição Revisada)",
  "anoPublicacao": 1950,
  "autorId": 1,
  "capaUrl": "https://m.media-amazon.com/images/I/51p4yV8U+ML._SL500_.jpg"
}

### 🔒 Deletar livro (somente ADMIN)
# ATENÇÃO: Use um ID de livro existente E NÃO EMPRESTADO no seu DB
DELETE {{host}}/api/Livros/2
Authorization: Bearer {{token_admin}}

###

### 🔒 (USUÁRIO) Fazer um empréstimo para si mesmo
# Esta rota usa o token do usuário logado para definir o UsuarioId.
# ATENÇÃO: livroId deve ser um ID de livro existente E DISPONÍVEL no seu DB.
POST {{host}}/api/Emprestimos/emprestar
Authorization: Bearer {{token_comum}}
Content-Type: application/json

{
  "livroId": 1
}

### 🔒 (ADMIN) Fazer um empréstimo para qualquer usuário
# Esta rota permite que um admin defina para qual usuário o livro será emprestado.
# ATENÇÃO: livroId e usuarioId devem existir E o livro deve estar disponível.
POST {{host}}/api/Emprestimos/emprestar-como-admin
Authorization: Bearer {{token_admin}}
Content-Type: application/json

{
  "livroId": 1,
  "usuarioId": 15
}

### 🔒 Devolver livro (qualquer um dos tokens válidos)
# A lógica no backend verifica se o usuário é o dono do empréstimo ou um admin.
# ATENÇÃO: Use um ID de empréstimo ATIVO (não devolvido) existente no seu DB.
PUT {{host}}/api/Emprestimos/devolver/1
Authorization: Bearer {{token_comum}}

###

### 🔒 Consultar MEUS empréstimos (usuário logado)
GET {{host}}/api/Emprestimos/meus-emprestimos
Authorization: Bearer {{token_comum}}

###

### 🔒 Listar TODOS os empréstimos (somente ADMIN)
GET {{host}}/api/Emprestimos/listar
Authorization: Bearer {{token_admin}}